<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ADs=
</value>
  </data>
</root>